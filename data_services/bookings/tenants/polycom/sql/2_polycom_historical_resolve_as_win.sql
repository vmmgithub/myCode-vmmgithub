/*
** 1. Create temporary tables so that it is easier to process
** 2. For each use case create a separate script
*/
SET tmp_table_size=64000000;
SET max_heap_table_size=64000000;
SET group_concat_max_len=64000;

SELECT NOW(), ' Polycom resolve as win script started' from DUAL;
CREATE DATABASE IF NOT EXISTS polycom_tmp default character set utf8;

/*
**=====<step 1>=====
**	1.0 Matching for ENTITLEMENT_DAILY_ACTIVITY
*/
DROP TABLE IF EXISTS polycom_tmp.entitlement_daily_activity_tmp;
CREATE TABLE IF NOT EXISTS polycom_tmp.entitlement_daily_activity_tmp (
	TMP_ID			INTEGER NOT NULL,
	MATCH_STATUS		varchar(50),
	OFFER_ID		varchar(50),
	OFFER_AMOUNT	DECIMAL(10,4),
-- 	PROCESS_DT		TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	KEY ix_tmp_id (TMP_ID),
	KEY ix_match (MATCH_STATUS, OFFER_ID)
) ENGINE=InnoDB DEFAULT character set utf8;

SELECT NOW(), ' Executing Step 1.1' from DUAL;
/*
**	1.1 NOT MATCHED (ENTITLEMENT_DAILY_ACTIVITY)
*/
SET autocommit=0;
INSERT INTO polycom_tmp.entitlement_daily_activity_tmp (
	TMP_ID,
	MATCH_STATUS,
	OFFER_ID
)
SELECT DISTINCT
	pai.T_ID,
	pai.STATUS,
	NULL
FROM
	( SELECT DISTINCT
		eda.TMP_ID as T_ID,
		'Not Matched' as STATUS
	FROM
		polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
		LEFT OUTER JOIN polycom.APP_OFFERS offers
		ON eda.PREV_AGREE_ID = offers.EXTENSIONS_TENANT_AGREEID_VALUE
		AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
		AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
		AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
	WHERE
		offers._ID IS NULL
		AND eda.SS_STATUS = 'Not Processed') as pai
	INNER JOIN
	( SELECT DISTINCT
		eda.TMP_ID as T_ID,
		'Not Matched' as STATUS
	FROM
		polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
		LEFT OUTER JOIN polycom.APP_OFFERS offers
		ON eda.PREV_ENTL_PO = offers.EXTENSIONS_MASTER_EXISTINGPONUMBER_VALUE
		AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
		AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
		AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
	WHERE
		offers._ID IS NULL
		AND eda.SS_STATUS = 'Not Processed') as pep
	ON pai.T_ID = pep.T_ID
	AND pai.STATUS = pep.STATUS;
commit;

SELECT NOW(), ' Executing Step 1.2' from DUAL;
/*
**	1.1 MATCHED (ENTITLEMENT_DAILY_ACTIVITY)
*/
SET autocommit=0;
INSERT INTO polycom_tmp.entitlement_daily_activity_tmp (
	TMP_ID,
	MATCH_STATUS,
	OFFER_ID
)
SELECT DISTINCT
	eda.TMP_ID,
	'Matched',
	offers._ID
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom.APP_OFFERS offers
	ON eda.PREV_AGREE_ID = offers.EXTENSIONS_TENANT_AGREEID_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	eda.SS_STATUS = 'Not Processed'
UNION
SELECT DISTINCT
	eda.TMP_ID,
	'Matched',
	offers._ID
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom.APP_OFFERS offers
	ON eda.PREV_ENTL_PO = offers.EXTENSIONS_MASTER_EXISTINGPONUMBER_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	eda.SS_STATUS = 'Not Processed';
commit;

SELECT NOW(), ' Executing Step 1.2' from DUAL;
/*
**	1.2 Produce the exception report to the client
*/
SELECT
	'AGREE_ID','PREV_ENTITLEMENT_ID','PREV_ENTL_SRVC_PART_NUM','AGREE_LINE_SERVICE_PART_NUM','AGREE_NAME','AGREE_NUM','AGREE_PO','AGREE_SALES_REGION','AGREE_SO','NO_OF_ASSET_ENTL_ON_LINE','AGREE_LINE_ID','AGREE_LINE_NUM','AGREE_LINE_PART_LIST','AGREE_LINE_PART_NET','AGREE_LINE_PART_NET_PER_ASSET','AGREE_LINE_QTY','AGREE_LINE_CURRENCY','AGREE_LINE_SERVICE_PART_NUM','AGREE_LINE_SERVICE_PRODUCT','ASSET_NUM','ASSET_ID','ASSET_PO_NUM','ASSET_SERIAL_NUM','ASSET_SERVICE_REGION','ASSET_SHIP_DATE','ASSET_SO_NUM','ASSET_ADDRESS_1','ASSET_ADDRESS_2','ASSET_ADDRESS_ID','ASSET_CITY','ASSET_COUNTRY','ASSET_POSTAL','ASSET_STATE','ASSET_PART_NUM','ASSET_PRODUCT','ASSET_PRODUCT_DIVISION','ASSET_PRODUCT_GROUP','ASSET_PRODUCT_ID','ASSET_PRODUCT_LINE','ENTL_CREATE_DATE','ENTL_DELIVERY_TYPE','ENTL_END_DATE','ENTL_ID','ENTL_NAME','ENTL_NET_PRICE_PER_ASSET','ENTL_NET_PRICE_PER_ASSET_USD','ENTL_SERVICE_TYPE','ENTL_ST_DATE','PREV_AGREE_ID','PREV_ENTL_END','PREV_ENTL_PO','SO_CURRENCY','SO_DATE','SO_EXT_NET_PRICE','SO_EXT_NET_PRICE_USD','AGREE_ACCNT_ID','AGREE_ACCNT_NAME','AGREE_ACCNT_GAN','AGREE_ACCNT_ADDRESS_1','AGREE_ACCNT_ADDRESS_2','AGREE_ACCNT_ADDRESS_ID','AGREE_ACCNT_CITY','AGREE_ACCNT_COUNTRY','AGREE_ACCNT_POSTAL','AGREE_ACCNT_STATE','AGREE_ACCNT_CONTACT_EMAIL','AGREE_ACCNT_CONTACT_NAME','AGREE_ACCNT_CONTACT_PHONE','AGREE_ACCNT_PGS_CONTACT_EMAIL','AGREE_ACCNT_PGS_CONTACT_FIRST','AGREE_ACCNT_PGS_CONTACT_ID','AGREE_ACCNT_PGS_CONTACT_LAST','AGREE_ACCNT_PGS_CONTACT_PHONE','AGREE_END_CUST_ID','AGREE_END_CUST_NAME','AGREE_END_CUST_ADDRESS_1','AGREE_END_CUST_ADDRESS_2','AGREE_END_CUST_ADDRESS_ID','AGREE_END_CUST_CITY','AGREE_END_CUST_COUNTRY','AGREE_END_CUST_POSTAL','AGREE_END_CUST_STATE','AGREE_END_CUST_CONTACT_EMAIL','AGREE_END_CUST_CONTACT_NAME','AGREE_END_CUST_CONTACT_PHONE','AGREE_END_CUST_PGS_CONTACT_EMAIL','AGREE_END_CUST_PGS_CONTACT_FIRST','AGREE_END_CUST_PGS_CONTACT_ID','AGREE_END_CUST_PGS_CONTACT_LAST','AGREE_END_CUST_PGS_CONTACT_PHONE','AGREE_RES_ACCNT_NAME','AGREE_RES_ID','AGREE_RES_ADDRESS_1','AGREE_RES_ADDRESS_2','AGREE_RES_ADDRESS_ID','AGREE_RES_CITY','AGREE_RES_COUNTRY','AGREE_RES_POSTAL','AGREE_RES_STATE','AGREE_RES_CONTACT_EMAIL','AGREE_RES_CONTAC_NAME','AGREE_RES_CONTACT_PHONE','AGREE_RES_PGS_CONTACT_EMAIL','AGREE_RES_PGS_CONTACT_FIRST','AGREE_RES_PGS_CONTACT_ID','AGREE_RES_PGS_CONTACT_LAST','AGREE_RES_PGS_CONTACT_PHONE','AGREE_SHIP_ACCNT_NAME','AGREE_SHIP_ID','AGREE_SHIP_ADDRESS_1','AGREE_SHIP_ADDRESS_2','AGREE_SHIP_ADDRESS_ID','AGREE_SHIP_CITY','AGREE_SHIP_COUNTRY','AGREE_SHIP_POSTAL','AGREE_SHIP_STATE','AGREE_SHIP_CONTACT_EMAIL','AGREE_SHIP_CONTACT_NAME','AGREE_SHIP_CONTACT_PHONE','AGREE_SHIP_PGS_CONTACT_EMAIL','AGREE_SHIP_PGS_CONTACT_FIRST','AGREE_SHIP_PGS_CONTACT_ID','AGREE_SHIP_PGS_CONTACT_LAST','AGREE_SHIP_PGS_CONTACT_PHONE','ASSET_OWNER_ACCNT_NAME','ASSET_OWNER_ID','ASSET_OWNER_ADDRESS_1','ASSET_OWNER_ADDRESS_2','ASSET_OWNER_ADDRESS_ID','ASSET_OWNER_CITY','ASSET_OWNER_COUNTRY','ASSET_OWNER_POSTAL','ASSET_OWNER_STATE','ASSET_CONTACT_EMAIL','ASSET_CONTACT_FIRST','ASSET_CONTACT_ID','ASSET_CONTACT_LAST','ASSET_CONTACT_PHONE','EXCEPTION'
FROM
	DUAL
UNION ALL
SELECT
	AGREE_ID,PREV_ENTITLEMENT_ID,PREV_ENTL_SRVC_PART_NUM,AGREE_LINE_SERVICE_PART_NUM,AGREE_NAME,AGREE_NUM,AGREE_PO,AGREE_SALES_REGION,AGREE_SO,NO_OF_ASSET_ENTL_ON_LINE,AGREE_LINE_ID,AGREE_LINE_NUM,AGREE_LINE_PART_LIST,AGREE_LINE_PART_NET,AGREE_LINE_PART_NET_PER_ASSET,AGREE_LINE_QTY,AGREE_LINE_CURRENCY,AGREE_LINE_SERVICE_PART_NUM,AGREE_LINE_SERVICE_PRODUCT,ASSET_NUM,ASSET_ID,ASSET_PO_NUM,ASSET_SERIAL_NUM,ASSET_SERVICE_REGION,ASSET_SHIP_DATE,ASSET_SO_NUM,ASSET_ADDRESS_1,ASSET_ADDRESS_2,ASSET_ADDRESS_ID,ASSET_CITY,ASSET_COUNTRY,ASSET_POSTAL,ASSET_STATE,ASSET_PART_NUM,ASSET_PRODUCT,ASSET_PRODUCT_DIVISION,ASSET_PRODUCT_GROUP,ASSET_PRODUCT_ID,ASSET_PRODUCT_LINE,ENTL_CREATE_DATE,ENTL_DELIVERY_TYPE,ENTL_END_DATE,ENTL_ID,ENTL_NAME,ENTL_NET_PRICE_PER_ASSET,ENTL_NET_PRICE_PER_ASSET_USD,ENTL_SERVICE_TYPE,ENTL_ST_DATE,PREV_AGREE_ID,PREV_ENTL_END,PREV_ENTL_PO,SO_CURRENCY,SO_DATE,SO_EXT_NET_PRICE,SO_EXT_NET_PRICE_USD,AGREE_ACCNT_ID,AGREE_ACCNT_NAME,AGREE_ACCNT_GAN,AGREE_ACCNT_ADDRESS_1,AGREE_ACCNT_ADDRESS_2,AGREE_ACCNT_ADDRESS_ID,AGREE_ACCNT_CITY,AGREE_ACCNT_COUNTRY,AGREE_ACCNT_POSTAL,AGREE_ACCNT_STATE,AGREE_ACCNT_CONTACT_EMAIL,AGREE_ACCNT_CONTACT_NAME,AGREE_ACCNT_CONTACT_PHONE,AGREE_ACCNT_PGS_CONTACT_EMAIL,AGREE_ACCNT_PGS_CONTACT_FIRST,AGREE_ACCNT_PGS_CONTACT_ID,AGREE_ACCNT_PGS_CONTACT_LAST,AGREE_ACCNT_PGS_CONTACT_PHONE,AGREE_END_CUST_ID,AGREE_END_CUST_NAME,AGREE_END_CUST_ADDRESS_1,AGREE_END_CUST_ADDRESS_2,AGREE_END_CUST_ADDRESS_ID,AGREE_END_CUST_CITY,AGREE_END_CUST_COUNTRY,AGREE_END_CUST_POSTAL,AGREE_END_CUST_STATE,AGREE_END_CUST_CONTACT_EMAIL,AGREE_END_CUST_CONTACT_NAME,AGREE_END_CUST_CONTACT_PHONE,AGREE_END_CUST_PGS_CONTACT_EMAIL,AGREE_END_CUST_PGS_CONTACT_FIRST,AGREE_END_CUST_PGS_CONTACT_ID,AGREE_END_CUST_PGS_CONTACT_LAST,AGREE_END_CUST_PGS_CONTACT_PHONE,AGREE_RES_ACCNT_NAME,AGREE_RES_ID,AGREE_RES_ADDRESS_1,AGREE_RES_ADDRESS_2,AGREE_RES_ADDRESS_ID,AGREE_RES_CITY,AGREE_RES_COUNTRY,AGREE_RES_POSTAL,AGREE_RES_STATE,AGREE_RES_CONTACT_EMAIL,AGREE_RES_CONTAC_NAME,AGREE_RES_CONTACT_PHONE,AGREE_RES_PGS_CONTACT_EMAIL,AGREE_RES_PGS_CONTACT_FIRST,AGREE_RES_PGS_CONTACT_ID,AGREE_RES_PGS_CONTACT_LAST,AGREE_RES_PGS_CONTACT_PHONE,AGREE_SHIP_ACCNT_NAME,AGREE_SHIP_ID,AGREE_SHIP_ADDRESS_1,AGREE_SHIP_ADDRESS_2,AGREE_SHIP_ADDRESS_ID,AGREE_SHIP_CITY,AGREE_SHIP_COUNTRY,AGREE_SHIP_POSTAL,AGREE_SHIP_STATE,AGREE_SHIP_CONTACT_EMAIL,AGREE_SHIP_CONTACT_NAME,AGREE_SHIP_CONTACT_PHONE,AGREE_SHIP_PGS_CONTACT_EMAIL,AGREE_SHIP_PGS_CONTACT_FIRST,AGREE_SHIP_PGS_CONTACT_ID,AGREE_SHIP_PGS_CONTACT_LAST,AGREE_SHIP_PGS_CONTACT_PHONE,ASSET_OWNER_ACCNT_NAME,ASSET_OWNER_ID,ASSET_OWNER_ADDRESS_1,ASSET_OWNER_ADDRESS_2,ASSET_OWNER_ADDRESS_ID,ASSET_OWNER_CITY,ASSET_OWNER_COUNTRY,ASSET_OWNER_POSTAL,ASSET_OWNER_STATE,ASSET_CONTACT_EMAIL,ASSET_CONTACT_FIRST,ASSET_CONTACT_ID,ASSET_CONTACT_LAST,ASSET_CONTACT_PHONE,'ERR 101: No Match to Renew Asset/Offer'
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.TMP_ID = eda.TMP_ID
	AND edat.MATCH_STATUS = 'Not Matched'
WHERE
	eda.SS_STATUS = 'Not Processed'
UNION ALL
SELECT
	AGREE_ID,PREV_ENTITLEMENT_ID,PREV_ENTL_SRVC_PART_NUM,AGREE_LINE_SERVICE_PART_NUM,AGREE_NAME,AGREE_NUM,AGREE_PO,AGREE_SALES_REGION,AGREE_SO,NO_OF_ASSET_ENTL_ON_LINE,AGREE_LINE_ID,AGREE_LINE_NUM,AGREE_LINE_PART_LIST,AGREE_LINE_PART_NET,AGREE_LINE_PART_NET_PER_ASSET,AGREE_LINE_QTY,AGREE_LINE_CURRENCY,AGREE_LINE_SERVICE_PART_NUM,AGREE_LINE_SERVICE_PRODUCT,ASSET_NUM,ASSET_ID,ASSET_PO_NUM,ASSET_SERIAL_NUM,ASSET_SERVICE_REGION,ASSET_SHIP_DATE,ASSET_SO_NUM,ASSET_ADDRESS_1,ASSET_ADDRESS_2,ASSET_ADDRESS_ID,ASSET_CITY,ASSET_COUNTRY,ASSET_POSTAL,ASSET_STATE,ASSET_PART_NUM,ASSET_PRODUCT,ASSET_PRODUCT_DIVISION,ASSET_PRODUCT_GROUP,ASSET_PRODUCT_ID,ASSET_PRODUCT_LINE,ENTL_CREATE_DATE,ENTL_DELIVERY_TYPE,ENTL_END_DATE,ENTL_ID,ENTL_NAME,ENTL_NET_PRICE_PER_ASSET,ENTL_NET_PRICE_PER_ASSET_USD,ENTL_SERVICE_TYPE,ENTL_ST_DATE,PREV_AGREE_ID,PREV_ENTL_END,PREV_ENTL_PO,SO_CURRENCY,SO_DATE,SO_EXT_NET_PRICE,SO_EXT_NET_PRICE_USD,AGREE_ACCNT_ID,AGREE_ACCNT_NAME,AGREE_ACCNT_GAN,AGREE_ACCNT_ADDRESS_1,AGREE_ACCNT_ADDRESS_2,AGREE_ACCNT_ADDRESS_ID,AGREE_ACCNT_CITY,AGREE_ACCNT_COUNTRY,AGREE_ACCNT_POSTAL,AGREE_ACCNT_STATE,AGREE_ACCNT_CONTACT_EMAIL,AGREE_ACCNT_CONTACT_NAME,AGREE_ACCNT_CONTACT_PHONE,AGREE_ACCNT_PGS_CONTACT_EMAIL,AGREE_ACCNT_PGS_CONTACT_FIRST,AGREE_ACCNT_PGS_CONTACT_ID,AGREE_ACCNT_PGS_CONTACT_LAST,AGREE_ACCNT_PGS_CONTACT_PHONE,AGREE_END_CUST_ID,AGREE_END_CUST_NAME,AGREE_END_CUST_ADDRESS_1,AGREE_END_CUST_ADDRESS_2,AGREE_END_CUST_ADDRESS_ID,AGREE_END_CUST_CITY,AGREE_END_CUST_COUNTRY,AGREE_END_CUST_POSTAL,AGREE_END_CUST_STATE,AGREE_END_CUST_CONTACT_EMAIL,AGREE_END_CUST_CONTACT_NAME,AGREE_END_CUST_CONTACT_PHONE,AGREE_END_CUST_PGS_CONTACT_EMAIL,AGREE_END_CUST_PGS_CONTACT_FIRST,AGREE_END_CUST_PGS_CONTACT_ID,AGREE_END_CUST_PGS_CONTACT_LAST,AGREE_END_CUST_PGS_CONTACT_PHONE,AGREE_RES_ACCNT_NAME,AGREE_RES_ID,AGREE_RES_ADDRESS_1,AGREE_RES_ADDRESS_2,AGREE_RES_ADDRESS_ID,AGREE_RES_CITY,AGREE_RES_COUNTRY,AGREE_RES_POSTAL,AGREE_RES_STATE,AGREE_RES_CONTACT_EMAIL,AGREE_RES_CONTAC_NAME,AGREE_RES_CONTACT_PHONE,AGREE_RES_PGS_CONTACT_EMAIL,AGREE_RES_PGS_CONTACT_FIRST,AGREE_RES_PGS_CONTACT_ID,AGREE_RES_PGS_CONTACT_LAST,AGREE_RES_PGS_CONTACT_PHONE,AGREE_SHIP_ACCNT_NAME,AGREE_SHIP_ID,AGREE_SHIP_ADDRESS_1,AGREE_SHIP_ADDRESS_2,AGREE_SHIP_ADDRESS_ID,AGREE_SHIP_CITY,AGREE_SHIP_COUNTRY,AGREE_SHIP_POSTAL,AGREE_SHIP_STATE,AGREE_SHIP_CONTACT_EMAIL,AGREE_SHIP_CONTACT_NAME,AGREE_SHIP_CONTACT_PHONE,AGREE_SHIP_PGS_CONTACT_EMAIL,AGREE_SHIP_PGS_CONTACT_FIRST,AGREE_SHIP_PGS_CONTACT_ID,AGREE_SHIP_PGS_CONTACT_LAST,AGREE_SHIP_PGS_CONTACT_PHONE,ASSET_OWNER_ACCNT_NAME,ASSET_OWNER_ID,ASSET_OWNER_ADDRESS_1,ASSET_OWNER_ADDRESS_2,ASSET_OWNER_ADDRESS_ID,ASSET_OWNER_CITY,ASSET_OWNER_COUNTRY,ASSET_OWNER_POSTAL,ASSET_OWNER_STATE,ASSET_CONTACT_EMAIL,ASSET_CONTACT_FIRST,ASSET_CONTACT_ID,ASSET_CONTACT_LAST,ASSET_CONTACT_PHONE,'ERR 102: No Resolution Date'
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.TMP_ID = eda.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'
WHERE
	eda.SO_DATE IS NULL
	AND eda.SS_STATUS = 'Not Processed'
/*
UNION ALL
SELECT
	AGREE_ID,PREV_ENTITLEMENT_ID,PREV_ENTL_SRVC_PART_NUM,AGREE_LINE_SERVICE_PART_NUM,AGREE_NAME,AGREE_NUM,AGREE_PO,AGREE_SALES_REGION,AGREE_SO,NO_OF_ASSET_ENTL_ON_LINE,AGREE_LINE_ID,AGREE_LINE_NUM,AGREE_LINE_PART_LIST,AGREE_LINE_PART_NET,AGREE_LINE_PART_NET_PER_ASSET,AGREE_LINE_QTY,AGREE_LINE_CURRENCY,AGREE_LINE_SERVICE_PART_NUM,AGREE_LINE_SERVICE_PRODUCT,ASSET_NUM,ASSET_ID,ASSET_PO_NUM,ASSET_SERIAL_NUM,ASSET_SERVICE_REGION,ASSET_SHIP_DATE,ASSET_SO_NUM,ASSET_ADDRESS_1,ASSET_ADDRESS_2,ASSET_ADDRESS_ID,ASSET_CITY,ASSET_COUNTRY,ASSET_POSTAL,ASSET_STATE,ASSET_PART_NUM,ASSET_PRODUCT,ASSET_PRODUCT_DIVISION,ASSET_PRODUCT_GROUP,ASSET_PRODUCT_ID,ASSET_PRODUCT_LINE,ENTL_CREATE_DATE,ENTL_DELIVERY_TYPE,ENTL_END_DATE,ENTL_ID,ENTL_NAME,ENTL_NET_PRICE_PER_ASSET,ENTL_NET_PRICE_PER_ASSET_USD,ENTL_SERVICE_TYPE,ENTL_ST_DATE,PREV_AGREE_ID,PREV_ENTL_END,PREV_ENTL_PO,SO_CURRENCY,SO_DATE,SO_EXT_NET_PRICE,SO_EXT_NET_PRICE_USD,AGREE_ACCNT_ID,AGREE_ACCNT_NAME,AGREE_ACCNT_GAN,AGREE_ACCNT_ADDRESS_1,AGREE_ACCNT_ADDRESS_2,AGREE_ACCNT_ADDRESS_ID,AGREE_ACCNT_CITY,AGREE_ACCNT_COUNTRY,AGREE_ACCNT_POSTAL,AGREE_ACCNT_STATE,AGREE_ACCNT_CONTACT_EMAIL,AGREE_ACCNT_CONTACT_NAME,AGREE_ACCNT_CONTACT_PHONE,AGREE_ACCNT_PGS_CONTACT_EMAIL,AGREE_ACCNT_PGS_CONTACT_FIRST,AGREE_ACCNT_PGS_CONTACT_ID,AGREE_ACCNT_PGS_CONTACT_LAST,AGREE_ACCNT_PGS_CONTACT_PHONE,AGREE_END_CUST_ID,AGREE_END_CUST_NAME,AGREE_END_CUST_ADDRESS_1,AGREE_END_CUST_ADDRESS_2,AGREE_END_CUST_ADDRESS_ID,AGREE_END_CUST_CITY,AGREE_END_CUST_COUNTRY,AGREE_END_CUST_POSTAL,AGREE_END_CUST_STATE,AGREE_END_CUST_CONTACT_EMAIL,AGREE_END_CUST_CONTACT_NAME,AGREE_END_CUST_CONTACT_PHONE,AGREE_END_CUST_PGS_CONTACT_EMAIL,AGREE_END_CUST_PGS_CONTACT_FIRST,AGREE_END_CUST_PGS_CONTACT_ID,AGREE_END_CUST_PGS_CONTACT_LAST,AGREE_END_CUST_PGS_CONTACT_PHONE,AGREE_RES_ACCNT_NAME,AGREE_RES_ID,AGREE_RES_ADDRESS_1,AGREE_RES_ADDRESS_2,AGREE_RES_ADDRESS_ID,AGREE_RES_CITY,AGREE_RES_COUNTRY,AGREE_RES_POSTAL,AGREE_RES_STATE,AGREE_RES_CONTACT_EMAIL,AGREE_RES_CONTAC_NAME,AGREE_RES_CONTACT_PHONE,AGREE_RES_PGS_CONTACT_EMAIL,AGREE_RES_PGS_CONTACT_FIRST,AGREE_RES_PGS_CONTACT_ID,AGREE_RES_PGS_CONTACT_LAST,AGREE_RES_PGS_CONTACT_PHONE,AGREE_SHIP_ACCNT_NAME,AGREE_SHIP_ID,AGREE_SHIP_ADDRESS_1,AGREE_SHIP_ADDRESS_2,AGREE_SHIP_ADDRESS_ID,AGREE_SHIP_CITY,AGREE_SHIP_COUNTRY,AGREE_SHIP_POSTAL,AGREE_SHIP_STATE,AGREE_SHIP_CONTACT_EMAIL,AGREE_SHIP_CONTACT_NAME,AGREE_SHIP_CONTACT_PHONE,AGREE_SHIP_PGS_CONTACT_EMAIL,AGREE_SHIP_PGS_CONTACT_FIRST,AGREE_SHIP_PGS_CONTACT_ID,AGREE_SHIP_PGS_CONTACT_LAST,AGREE_SHIP_PGS_CONTACT_PHONE,ASSET_OWNER_ACCNT_NAME,ASSET_OWNER_ID,ASSET_OWNER_ADDRESS_1,ASSET_OWNER_ADDRESS_2,ASSET_OWNER_ADDRESS_ID,ASSET_OWNER_CITY,ASSET_OWNER_COUNTRY,ASSET_OWNER_POSTAL,ASSET_OWNER_STATE,ASSET_CONTACT_EMAIL,ASSET_CONTACT_FIRST,ASSET_CONTACT_ID,ASSET_CONTACT_LAST,ASSET_CONTACT_PHONE,'ERR 103: Resolution Date outside of Selling Period'
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.TMP_ID = eda.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'
WHERE
	eda.SO_DATE IS NOT NULL
	AND (eda.SO_DATE > '2013-03-31'	-- <TODO> get this date from opportunities.
	OR eda.SO_DATE < '2013-01-01')	-- <TODO> get this date from opportunities.
	AND eda.SS_STATUS = 'Not Processed'
*/

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_exception_entitlements.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 1.3' from DUAL;
/*
**	1.2.1 Update the status so that exception records are not processed.
*/
SET autocommit=0;
UPDATE	polycom_tmp.entitlement_daily_activity_tmp edat
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.TMP_ID = edat.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'
	AND eda.SO_DATE IS NULL
	/* Commented out.  The zenMode will take care of this. -- Nithin
	AND (eda.SO_DATE IS NULL
		OR eda.SO_DATE > '2013-03-31'   -- <TODO> get this date from opportunities.
		OR eda.SO_DATE < '2013-01-01')	-- <TODO> get this date from opportunities.
	*/
SET
	edat.MATCH_STATUS = 'Exception - Date is null OR out of range';
commit;

SELECT NOW(), ' Executing Step 1.3' from DUAL;
/*
**	1.3.1 Calculate the Offer Amount from ENTITLEMENT table.
*/
SET autocommit=0;
UPDATE polycom_tmp.entitlement_daily_activity_tmp edat
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.TMP_ID = edat.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'
SET
	edat.OFFER_AMOUNT = eda.AGREE_LINE_PART_NET_PER_ASSET
WHERE
	eda.ENTL_NET_PRICE_PER_ASSET IS NULL
;

/*
**	1.3.2 Calculate the Offer Amount from ENTITLEMENT table.
*/
UPDATE polycom_tmp.entitlement_daily_activity_tmp edat
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.TMP_ID = edat.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'
SET
	edat.OFFER_AMOUNT = eda.ENTL_NET_PRICE_PER_ASSET
WHERE
	eda.ENTL_NET_PRICE_PER_ASSET IS NOT NULL
;
commit;

SELECT NOW(), ' Executing Step 1.4' from DUAL;
/*
**	1.4 Produce 'Update Offer with values in ENTITLEMENT'
*/
SELECT
	'_id(string)',
	'amount.amount(numeric)',
	'amount.code.name(string)',
	'startDate(date)',
	'endDate(date)',
	'extentions.tenant.bundledServicePartNumber.value(string)',
        'isExcluded(boolean)'
FROM
	DUAL
UNION ALL
SELECT DISTINCT
	IFNULL(edat.OFFER_ID, ''),
	IFNULL(eda.ENTL_NET_PRICE_PER_ASSET, ''),
	COALESCE(LOWER(eda.AGREE_LINE_CURRENCY), LOWER(eda.SO_CURRENCY), ''),
	IFNULL(eda.ENTL_ST_DATE, ''),
	IFNULL(eda.ENTL_END_DATE, ''),
	IFNULL(eda.PREV_ENTL_SRVC_PART_NUM, ''),
        'false'
FROM
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.TMP_ID = eda.TMP_ID
	AND edat.MATCH_STATUS = 'Matched'

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_update_offers_with_values_in_entitlement.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;
/*
**=====</Step 1>=====
*/
/*
**=====<step 2>=====
**	2.0 Process Matched Offers (ENTITLEMENT_DAILY_ACTIVITY)
*/

DROP TABLE IF EXISTS polycom_tmp.opp_entitlement_tmp;
CREATE TABLE IF NOT EXISTS polycom_tmp.opp_entitlement_tmp (
	OPP_ID		VARCHAR(50),
	MATCH_STATUS	VARCHAR(50),
	RESOLUTION_DATE	DATE,
	RESOLUTION_REASON	VARCHAR(50),
	KEY ix_opp_id_a_match_status (OPP_ID, MATCH_STATUS),
	KEY ix_match_status (MATCH_STATUS)
) ENGINE=InnoDB DEFAULT character set utf8;

SELECT NOW(), ' Executing Step 2.1' from DUAL;
/*
**	2.1 Find out all matching opportunities (ENTITLEMENT_DAILY_ACTIVITY)
*/
SET autocommit=0;
INSERT INTO polycom_tmp.opp_entitlement_tmp (
	OPP_ID,
	MATCH_STATUS
)
SELECT DISTINCT
	opp._ID,
	NULL
FROM
	polycom_tmp.entitlement_daily_activity_tmp edat
	INNER JOIN polycom.APP_OFFERS offers
	ON edat.MATCH_STATUS = 'Matched'
	AND offers._ID = edat.OFFER_ID
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OFFERS'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME = 'quote'
	AND quote_r.SOURCEKEY = offers._ID
	INNER JOIN polycom.RELATIONSHIPS opp_r
	ON opp_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND opp_r.DESTTABLE = 'APP_QUOTES'
	AND opp_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND opp_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OPPORTUNITIES opp
	ON opp._ID = opp_r.SOURCEKEY
WHERE
	opp.FLOWS_SALESSTAGES_STATE_NAME NOT IN ('closedSale', 'houseAccount', 'noService');
commit;


SELECT NOW(), ' Executing Step 2.2' from DUAL;
/*
**	2.2 Find out the partially matching opportunities (ENTITLEMENT_DAILY_ACTIVITY)
*/
DROP TABLE IF EXISTS polycom_tmp.opp_id_tmp;
CREATE TABLE IF NOT EXISTS polycom_tmp.opp_id_tmp (
	OPP_ID	varchar(50),
	KEY ix_opp (OPP_ID)
) ENGINE=InnoDB DEFAULT character set utf8;

SET autocommit=0;
INSERT INTO polycom_tmp.opp_id_tmp
SELECT DISTINCT
	opp_e.OPP_ID
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	LEFT OUTER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.PREV_AGREE_ID = offers.EXTENSIONS_TENANT_AGREEID_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	eda.TMP_ID IS NULL
UNION
SELECT DISTINCT
	opp_e.OPP_ID
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	LEFT OUTER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.PREV_ENTL_PO = offers.EXTENSIONS_MASTER_EXISTINGPONUMBER_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	eda.TMP_ID IS NULL
;
commit;

SET autocommit=0;
UPDATE polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom_tmp.opp_id_tmp oit
	ON opp_e.OPP_ID = oit.OPP_ID
SET
	opp_e.MATCH_STATUS = 'Partial Match';
commit;
TRUNCATE polycom_tmp.opp_id_tmp;

SELECT NOW(), ' Executing Step 2.2' from DUAL;
/*
**	2.3 Find out the Fully matching opportunities (ENTITLEMENT_DAILY_ACTIVITY)
*/
SET autocommit=0;
INSERT INTO polycom_tmp.opp_id_tmp
SELECT DISTINCT
	opp_e.OPP_ID
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.PREV_AGREE_ID = offers.EXTENSIONS_TENANT_AGREEID_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	opp_e.MATCH_STATUS IS NULL
UNION
SELECT DISTINCT
	opp_e.OPP_ID
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.PREV_ENTL_PO = offers.EXTENSIONS_MASTER_EXISTINGPONUMBER_VALUE
	AND eda.PREV_ENTL_SRVC_PART_NUM = offers.EXTENSIONS_TENANT_BUNDLEDSERVICEPARTNUMBER_VALUE
	AND eda.ASSET_ID = offers.EXTENSIONS_TENANT_ASSETID_VALUE
	AND eda.PREV_ENTITLEMENT_ID = offers.EXTENSIONS_TENANT_ENTITLEID_VALUE
WHERE
	opp_e.MATCH_STATUS IS NULL
;
commit;

SET autocommit=0;
UPDATE polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom_tmp.opp_id_tmp oit
	ON opp_e.OPP_ID = oit.OPP_ID
SET
	opp_e.MATCH_STATUS = 'Full Match';
commit;
TRUNCATE polycom_tmp.opp_id_tmp;
/*
**====</Step 2>=====
*/

SELECT NOW(), ' Executing Step 3.0' from DUAL;
/*
**=====<Step 3>=====
**	3.0 Produce the Update "IsExcluded" scrub (ENTITLEMENT_DAILY_ACTIVITY)
*/
SELECT
	'_id(string)',
	'IsExcluded(boolean)'
FROM
	DUAL
UNION ALL
SELECT DISTINCT
	offers._ID,
	'false'
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
WHERE
	opp_e.MATCH_STATUS = 'Full Match'
	AND offers.ISEXCLUDED = 'true'
INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_resolve_as_win_full_match_update_excluded_offers.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 3.1.0' from DUAL;
/*
**	3.1.0 Calculate 'Result Reason' (ENTITLEMENT_DAILY_ACTIVITY)
*/
DROP TABLE IF EXISTS polycom_tmp.close_sale_result_reason;
CREATE TABLE IF NOT EXISTS polycom_tmp.close_sale_result_reason (
	OPP_ID	varchar(50),
	OFFER_ID	varchar(50),
	RESULT_REASON	varchar(50),
	INDEX ix_result(OPP_ID, OFFER_ID, RESULT_REASON)
) ENGINE=InnoDB DEFAULT character set utf8;

DROP TABLE IF EXISTS polycom_tmp.close_sale_use_reason;
CREATE TABLE IF NOT EXISTS polycom_tmp.close_sale_use_reason (
	OPP_ID	varchar(50),
	RESULT_REASON	varchar(50),
	INDEX ix_use(OPP_ID)
) ENGINE=InnoDB DEFAULT character set utf8;

SET autocommit=0;
INSERT INTO polycom_tmp.close_sale_result_reason (
	OPP_ID,
	OFFER_ID,
	RESULT_REASON
)
SELECT DISTINCT
	opp_e.OPP_ID,
	offers._ID,
	case
		when DATEDIFF(offers.ENDDATE, offers.STARTDATE) < 365
			then 'csCTS' -- "CS - Co-term Short - CTS"
		when DATEDIFF(offers.ENDDATE, offers.STARTDATE) > 365
			then 'csCTL' -- "CS - Co-term Long - CTL"
		when DATEDIFF(offers.ENDDATE, offers.STARTDATE) = 365
			then 'csRAP' -- "CS - Renewed at Par - R@P"
	end as ResultReason
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY;
-- WHERE
-- 	opp_e.MATCH_STATUS = 'Full Match';

SELECT NOW(), ' Executing Step 3.1.1' from DUAL;
/*
**	3.1.1 Find a most frequently used 'Close Reason' for the opportunity
*/
INSERT INTO polycom_tmp.close_sale_use_reason
SELECT DISTINCT
	tc0.OPP_ID,
	tc0.RESULT_REASON
FROM
	(SELECT OPP_ID, RESULT_REASON, COUNT(OPP_ID) R_COUNT
	FROM polycom_tmp.close_sale_result_reason
	GROUP BY OPP_ID, RESULT_REASON) as tc0
	INNER JOIN
	(SELECT OPP_ID, MAX(R_COUNT) M_COUNT
	FROM
		(SELECT OPP_ID, RESULT_REASON, COUNT(OPP_ID) R_COUNT
		FROM polycom_tmp.close_sale_result_reason
		GROUP BY OPP_ID, RESULT_REASON) as tc2
	GROUP BY OPP_ID) as tc1
	ON tc1.OPP_ID = tc0.OPP_ID
	AND tc1.M_COUNT = tc0.R_COUNT;
commit;
/*
**====</Step 3>=====
*/

SELECT NOW(), ' Executing Step 4.0' from DUAL;
/*
**====<Step 4>=====
**	4.0 Output the 'ResolveAsWin' scrub
**	No need for the UNION query as the previously UNIONed entitlement_daily_activity_tmp is used in INNER JOIN.
*/
SELECT
	'Name',
	'resolutionDate',
	'poAmount',
	'poDate',
	'poNumber',
	'reason',
	'soAmount',
	'soDate',
	'soNumber'
FROM
	DUAL
UNION ALL
SELECT
	COALESCE(msov.SUBOPPID, msov.OPPID),
	IFNULL(MIN(eda.SO_DATE), ''),
	IFNULL(SUM(eda.ENTL_NET_PRICE_PER_ASSET), ''),
	IFNULL(MIN(eda.SO_DATE), ''),
	IF(LENGTH(MIN(eda.AGREE_PO)) = 0, 'Blank', MIN(eda.AGREE_PO)),
	IFNULL(MIN(csur.RESULT_REASON), ''),
	IFNULL(SUM(eda.ENTL_NET_PRICE_PER_ASSET), ''),
	IFNULL(MIN(eda.SO_DATE), ''),
	IF(LENGTH(MIN(eda.AGREE_SO)) = 0, 'Blank', MIN(eda.AGREE_SO))
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom_tmp.close_sale_use_reason csur
	ON opp_e.OPP_ID = csur.OPP_ID
	INNER JOIN polycom.MASTER_SUB_OPP_VIEW msov
	ON msov.OPPID = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.OFFER_ID = offers._ID
	AND edat.MATCH_STATUS = 'Matched'
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.TMP_ID = edat.TMP_ID
WHERE
	opp_e.MATCH_STATUS in ('Full Match', 'Partial Match')
GROUP BY
	opp_e.OPP_ID

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_resolve_as_win.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 4.1' from DUAL;
/*
**	4.1 Recalculate opportunities for 'Partial Match' Opportunity with underlying offers with 'matched' entitlements.
*/
SELECT
	'_id(string)',
	'amount.amount(numeric)',
	'targetAmount.amount(numeric)',
	'extentions.tenant.priorRenewalAmountNotAnnualized.value.amount(numeric)',
	'extentions.tenant.listPrice.value.amount(numeric)',
	'targetDate(date)',
	'startDate(date)',
	'endDate(date)'
FROM
	DUAL
UNION ALL
SELECT
	IFNULL(opp_e.OPP_ID, ''),
	IFNULL(SUM(offers.AMOUNT_AMOUNT), ''),
	IFNULL(SUM(offers.TARGETAMOUNT_AMOUNT), ''),
	IFNULL(SUM(offers.EXTENSIONS_TENANT_PRIORRENEWALAMOUNTNOTANNUALIZED_VALUE_AMOUNT), ''),
	IFNULL(SUM(offers.EXTENSIONS_TENANT_LISTPRICE_AMOUNT), ''),
	IFNULL(MIN(offers.TARGETDATE), ''),
	IFNULL(MIN(offers.STARTDATE), ''),
	IFNULL(MAX(offers.ENDDATE), '')
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom_tmp.close_sale_use_reason csur
	ON opp_e.OPP_ID = csur.OPP_ID
	INNER JOIN polycom.APP_OPPORTUNITIES opp
	ON opp._ID = opp_e.OPP_ID
	AND (opp.ISSUBORDINATE IS NULL
		OR opp.ISSUBORDINATE IN ('false', 'undefined'))
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp._ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.OFFER_ID = offers._ID
	AND edat.MATCH_STATUS = 'Matched'
	INNER JOIN polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
	ON eda.TMP_ID = edat.TMP_ID
WHERE
	opp_e.MATCH_STATUS = 'Partial Match'
GROUP BY
	opp_e.OPP_ID

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_calculate_split_opportunity_with_matched_offers_resolve_as_win.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 4.2' from DUAL;
/*
**	4.2 Recalculate opportunities for 'Partial Match' Opportunity with underlying offers with 'not matched' entitlements.
**	This will be the split opportunity to get created in Renew.
*/
SELECT
	'_id(string)',
	'amount.amount(numeric)',
	'targetAmount.amount(numeric)',
	'extentions.tenant.priorRenewalAmountNotAnnualized.value.amount(numeric)',
	'extentions.tenant.listPrice.value.amount(numeric)',
	'targetDate(date)',
	'startDate(date)',
	'endDate(date)'
FROM
	DUAL
UNION ALL
SELECT
	IFNULL(opp_e.OPP_ID, ''),
	IFNULL(SUM(offers.AMOUNT_AMOUNT), ''),
	IFNULL(SUM(offers.TARGETAMOUNT_AMOUNT), ''),
	IFNULL(SUM(offers.EXTENSIONS_TENANT_PRIORRENEWALAMOUNTNOTANNUALIZED_VALUE_AMOUNT), ''),
	IFNULL(SUM(offers.EXTENSIONS_TENANT_LISTPRICE_AMOUNT), ''),
	IFNULL(MIN(offers.TARGETDATE), ''),
	IFNULL(MIN(offers.STARTDATE), ''),
	IFNULL(MAX(offers.ENDDATE), '')
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom_tmp.close_sale_use_reason csur
	ON opp_e.OPP_ID = csur.OPP_ID
	INNER JOIN polycom.APP_OPPORTUNITIES opp
	ON opp._ID = opp_e.OPP_ID
	AND (opp.ISSUBORDINATE IS NULL
		OR opp.ISSUBORDINATE IN ('false', 'undefined'))
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME IN ('baseQuote', 'primaryQuote')
	AND quote_r.SOURCEKEY = opp._ID
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	LEFT OUTER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.OFFER_ID = offers._ID
	AND edat.MATCH_STATUS = 'Matched'
WHERE
	opp_e.MATCH_STATUS = 'Partial Match'
	AND edat.TMP_ID IS NULL
GROUP BY
	opp_e.OPP_ID

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_calculate_split_opportunity_with_unmatched_offers.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 4.3' from DUAL;
/*
**	4.3 Produce 'Split Opportunity' with offers that did not match.
**	This will be the split opportunity to get created in Renew.
*/
SELECT
	'Opportunity',
	'OfferIds'
FROM
	DUAL
UNION ALL
SELECT
	opp_e.OPP_ID,
	group_concat(offers._ID)
FROM
	polycom_tmp.opp_entitlement_tmp opp_e
	INNER JOIN polycom.RELATIONSHIPS quote_r
	ON quote_r.SOURCETABLE = 'APP_OPPORTUNITIES'
	AND quote_r.DESTTABLE = 'APP_QUOTES'
	AND quote_r.RELNAME = 'baseQuote'
	AND quote_r.SOURCEKEY = opp_e.OPP_ID
	INNER JOIN polycom.APP_OPPORTUNITIES opp
	ON opp._ID = opp_e.OPP_ID
	AND opp.ISSUBORDINATE <> 'true'
	INNER JOIN polycom.RELATIONSHIPS offer_r
	ON offer_r.SOURCETABLE = 'APP_OFFERS'
	AND offer_r.DESTTABLE = 'APP_QUOTES'
	AND offer_r.RELNAME = 'quote'
	AND offer_r.DESTKEY = quote_r.DESTKEY
	INNER JOIN polycom.APP_OFFERS offers
	ON offers._ID = offer_r.SOURCEKEY
	LEFT OUTER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
	ON edat.OFFER_ID = offers._ID
	AND edat.MATCH_STATUS = 'Matched'
WHERE
	opp_e.MATCH_STATUS = 'Partial Match'
	AND edat.TMP_ID IS NULL
GROUP BY
	opp_e.OPP_ID

INTO OUTFILE '/data/workspace/polycom/extracts/polycom_entitlement_split_opportunity_with_unmatched_offers.csv'
	CHARACTER SET utf8
	FIELDS TERMINATED BY ','
	ENCLOSED BY '"'
	ESCAPED BY '\\'
	LINES TERMINATED BY '\n'
;

SELECT NOW(), ' Executing Step 4.4' from DUAL;
/*
**	4.4 Update the processed history of all 'Matched' entitlements
**	This will prevent us from reprocessing these records again.
*/
/* <TODO>
SET autocommit=0;
UPDATE 
	polycom_data.ENTITLEMENT_DAILY_ACTIVITY_HISTORICAL eda
--	INNER JOIN polycom_tmp.entitlement_daily_activity_tmp edat
--	ON eda.TMP_ID = edat.TMP_ID
--	AND edat.MATCH_STATUS = 'Matched'
SET
	eda.SS_STATUS = 'Processed',
	eda.SS_PROCESSED_DT = NOW()
WHERE
	eda.SS_STATUS = 'Not Processed';
commit;
*/
/*
**====</Step 4>=====
*/
SELECT NOW(), ' Polycom resolve as win script completed' from DUAL;
